services:
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    env_file:
      - .docker.env
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/postgres:/data/postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
  
  qdrant:
    image: qdrant/qdrant:latest
    # restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ./qdrant_data:/qdrant/storage
  
  skincare_gpt:
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - "8501:8501"
    env_file:
      - .docker.env

configs:
  qdrant_config:
    content: |
      log_level: INFO      
  